meta:
  docker-registry-config: &docker-registry-config
    username: ((docker_cloud_pix4d_user))
    password: ((docker_cloud_pix4d_password))

  s3-resource-simple-git: &s3-resource-simple-git
    uri: https://github.com/Pix4D/s3-resource-simple.git

  gh-status-handlers: &gh-status-handlers
      on_success:
        put: gh-status
        inputs: [s3-resource-simple.git]
        params: {state: success}
      on_failure:
        put: gh-status
        inputs: [s3-resource-simple.git]
        params: {state: failure}
      on_error:
        put: gh-status
        inputs: [s3-resource-simple.git]
        params: {state: error}
      on_abort:
        put: gh-status
        inputs: [s3-resource-simple.git]
        # The GH status API doesn't have "abort", so we use the closest state.
        params:
          state: error

###############################################################################

resource_types:

- name: cogito
  type: registry-image
  check_every: 1h
  source:
    repository: pix4d/cogito
    tag: latest

- name: s3-resource-simple
  type: registry-image
  source:
    <<: *docker-registry-config
    repository: docker.ci.pix4d.com/s3-resource-simple
    tag: ((docker_tag))

###############################################################################

resources:

- name: gh-status
  type: cogito
  check_every: never
  source:
    owner: pix4d
    repo: s3-resource-simple
    access_token: ((github_repo_status_token))
    gchat_webhook: ((gchat_hook))

- name: s3-resource-simple.git
  type: git
  source:
    <<: *s3-resource-simple-git
    ignore_paths: [ci/work-img]
    branch: ((branch))

- name: work-img.git
  type: git
  source:
    <<: *s3-resource-simple-git
    paths: [ci/]
    branch: ((branch))

- name: work-img.docker
  type: registry-image
  source:
    <<: *docker-registry-config
    repository: docker.ci.pix4d.com/s3-resource-simple-work-img
    tag: ((docker_tag))

- name: final-img.docker
  type: registry-image
  source:
    <<: *docker-registry-config
    repository: docker.ci.pix4d.com/s3-resource-simple
    tag: ((docker_tag))

- name: bucket.s3simple
  type: s3-resource-simple
  source:
    bucket: ci-pix4d-concourse-pipeline
    region_name: eu-west-1
    access_key_id: ((concourse_user_access_key))
    secret_access_key: ((concourse_user_secret_key))
    path: artifacts/s3-resource-simple/((branch))/
    sync: false # Disable downloading.
    options:
    # FIXME! `--recursive` is _currently_ needed to copy a directory :-(
    - --recursive

###############################################################################

jobs:

- name: work-img
  <<: *gh-status-handlers
  serial_groups: [img]
  plan:
  - get: work-img.git
    trigger: true
  - get: s3-resource-simple.git
  - put: gh-status
    inputs: [s3-resource-simple.git]
    params: {state: pending}
  - task: build-work-img
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: concourse/oci-build-task
      inputs:
      - name: work-img.git
      outputs:
      - name: image
      run:
        path: build
    params:
      CONTEXT: work-img.git/ci/work-img
      DOCKERFILE: work-img.git/ci/work-img/Dockerfile
  - put: work-img.docker
    inputs: [image, work-img.git]
    params:
      image: image/image.tar

- name: resource-img
  <<: *gh-status-handlers
  serial_groups: [img]
  plan:
  - get: s3-resource-simple.git
    trigger: true
  - put: gh-status
    inputs: [s3-resource-simple.git]
    params: {state: pending}
  - task: build-final-img
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: concourse/oci-build-task
      inputs:
      - name: s3-resource-simple.git
      outputs:
      - name: image
      run:
        path: build
    params:
      CONTEXT: s3-resource-simple.git
      DOCKERFILE: s3-resource-simple.git/Dockerfile
  - put: final-img.docker
    inputs: [image, s3-resource-simple.git]
    params:
      image: image/image.tar

- name: test-put
  <<: *gh-status-handlers
  # The serial_groups is to avoid race conditions when a single commit changes
  # code both in work-img.git and s3-resource-simple.git
  serial_groups: [img]
  plan:
  - get: s3-resource-simple.git
    trigger: true
    passed: [resource-img]
  - get: work-img.docker
    trigger: true
    passed: [work-img]
  - put: gh-status
    inputs: [s3-resource-simple.git]
    params: {state: pending}
  - task: test-put
    image: work-img.docker
    config:
      platform: linux
      inputs:
      - name: s3-resource-simple.git
      outputs:
      - name: out
      run:
        path: s3-resource-simple.git/ci/tasks/test-put.sh
  - put: bucket.s3simple
    params:
      dir: out

- name: test-get
  <<: *gh-status-handlers
  plan:
  - get: s3-resource-simple.git
    trigger: true
    passed: [test-put]
  - get: bucket.s3simple
    trigger: true
    passed: [test-put]
  - get: work-img.docker
    trigger: true
    passed: [test-put]
  - put: gh-status
    inputs: [s3-resource-simple.git]
    params: {state: pending}
  - task: test-get
    image: work-img.docker
    config:
      platform: linux
      inputs:
      - name: s3-resource-simple.git
      - name: bucket.s3simple
      run:
        path: s3-resource-simple.git/ci/tasks/test-get.sh
